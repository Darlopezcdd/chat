// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace chat.Api.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20250118192636_v01")]
    partial class v01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("GrupoUser", b =>
                {
                    b.Property<int>("GruposId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GruposId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GrupoUser");
                });

            modelBuilder.Entity("chat.Modelos.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("chat.Modelos.Mensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Leido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlArchivo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserDestinatarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserRemitenteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("UserDestinatarioId");

                    b.HasIndex("UserRemitenteId");

                    b.ToTable("Mensaje");
                });

            modelBuilder.Entity("chat.Modelos.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notificacion");
                });

            modelBuilder.Entity("chat.Modelos.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GrupoUser", b =>
                {
                    b.HasOne("chat.Modelos.Grupo", null)
                        .WithMany()
                        .HasForeignKey("GruposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("chat.Modelos.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("chat.Modelos.Mensaje", b =>
                {
                    b.HasOne("chat.Modelos.Grupo", "Grupo")
                        .WithMany("Mensajes")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("chat.Modelos.User", "UserDestinatario")
                        .WithMany("MensajesRecibidos")
                        .HasForeignKey("UserDestinatarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("chat.Modelos.User", "UserRemitente")
                        .WithMany("MensajesEnviados")
                        .HasForeignKey("UserRemitenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("UserDestinatario");

                    b.Navigation("UserRemitente");
                });

            modelBuilder.Entity("chat.Modelos.Notificacion", b =>
                {
                    b.HasOne("chat.Modelos.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("chat.Modelos.Grupo", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("chat.Modelos.User", b =>
                {
                    b.Navigation("MensajesEnviados");

                    b.Navigation("MensajesRecibidos");
                });
#pragma warning restore 612, 618
        }
    }
}
